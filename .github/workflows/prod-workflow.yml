name: Prod deploy

on:
  push:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

jobs:
  main-ui:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          ssh-key: ${{ secrets.PULL_KEY_REPO }}

      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy, rustfmt
          target: wasm32-unknown-unknown
          toolchain: stable

      - uses: cargo-bins/cargo-binstall@main

      - name: Install dioxus-cli
        run: |
          cargo binstall dioxus-cli --force
          cargo binstall toml-cli --force

      - name: Cache builder
        id: main-ui-build-cache
        uses: actions/cache@v3
        with:
          key: main-ui-build-cache
          path: |
            target

      - name: Checking violate
        env:
          REGION: ap-northeast-2
          ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SERVICE: main-ui
        run: |
          dx check -p $SERVICE

      - name: Deploy APIs
        env:
          REGION: ap-northeast-2
          RUST_LOG: error
          ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          FIREBASE_API_KEY: "${{ secrets.FIREBASE_API_KEY }}"
          FIREBASE_AUTH_DOMAIN: "${{ secrets.FIREBASE_AUTH_DOMAIN }}"
          FIREBASE_PROJECT_ID: "${{ secrets.FIREBASE_PROJECT_ID }}"
          FIREBASE_STORAGE_BUCKET: "${{ secrets.FIREBASE_STORAGE_BUCKET }}"
          FIREBASE_MESSAGING_SENDER_ID: "${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}"
          FIREBASE_APP_ID: "${{ secrets.FIREBASE_APP_ID }}"
          FIREBASE_MEASUREMENT_ID: "${{ secrets.FIREBASE_MEASUREMENT_ID }}"
          OWNER_KEY: ${{ secrets.PROD_KLAYTN_OWNER_KEY }}
          FEEPAYER_ADDRESS: ${{ secrets.PROD_KLAYTN_FEEPAYER_ADDR }}
          MAIN_API_ENDPOINT: https://api.incheon.world
          NEW_API_ENDPOINT: https://api.incheonheroes.world
          DISCORD_API_ENDPOINT: https://discord-api.incheon.world
          LOGS_API_ENDPOINT: https://logs-api.incheon.world
          NFT_BASE_URI: https://metadata.biyard.co/incheon-heroes/json

          ENV: prod
          SERVICE: main-ui
          DOMAIN: incheonheroes.world
          KAKAO_CLIENT_ID: ${{ secrets.KAKAO_CLIENT_ID }}
          KAKAO_REDIRECT_URI: https://incheonheroes.world/oauth/kakao
          ICP_CANISTER_ID: 5wtzb-piaaa-aaaap-qhjfq-cai
          ICP_ENDPOINT: https://identity.ic0.app

          KLAYTN_ENDPOINT: https://public-en.node.kaia.io/
          CONTRACT_SHOP: "0x3f51e2216F6E4532324e70d71073696Ef2A73b7e"
          CONTRACT_HOLDER: "0x03AcEF98A25B8bB8fa47F0dbF0116823E6f65528"
          CONTRACT_SBT: "0xFa9d777647BF54A6052E21FdC6A3ecd60CF0E076"
          CONTRACT_EXPERIENCE: "0x7cD4A0339Bb7DAF2088E02d6E3933fDBc9e9F360"
          CONTRACT_NFT: "0xa3bd085014a9Ea59CBE9E14e6A9220E83BbCA333"
          CONTRACT_MISSION: "0xC95261343FCDdbb8c0885FE2E095a032DE486728"
          CONTRACT_ACCOUNT: "0xe394EbAF9987ecFB952778E10B0255Daa9133b28"
          CONTRACT_GOODS: "0xA0a66c39aA7a4F339ebF4884B57AbD0A362b1D16"
          CONTRACT_INCHEON_CONTENTS: "0x345F050DdcdBdEA04Cd34E8456f48160d6b1de83"

          OPENSEA_ENDPOINT: "https://opensea.io/assets/klaytn"
          DISCORD_MISSION_URL: "https://discord.com/channels/1140593363515617372/1216994620945207296"

          API_PREFIX: /api
          ENABLE_S3: true
          ENABLE_FARGATE: false
          ENABLE_DYNAMO: false
          ENABLE_LAMBDA: true
        run: |
          npm i -g aws-cdk @tailwindcss/cli
          make deploy-web

  main-api:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          ssh-key: ${{ secrets.PULL_KEY_REPO }}

      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy, rustfmt
          target: wasm32-unknown-unknown
          toolchain: stable

      - uses: cargo-bins/cargo-binstall@main

      - name: Cache builder
        id: main-ui-build-cache
        uses: actions/cache@v3
        with:
          key: main-api-build-cache
          path: |
            packages/main-api/target

      - name: Deploy APIs
        env:
          REGION: ap-northeast-2
          ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          BASE_DOMAIN: incheonheroes.world
          ENV: prod
          RUST_LOG: error
          SERVICE: main-api
          DOMAIN: api.incheonheroes.world
          JWT_SECRET_KEY: ${{ secrets.DEV_JWT_SECRET }}

          DATABASE_TYPE: postgres
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

          KLAYTN_FEEPAYER_KEY: ${{ secrets.PROD_KLAYTN_FEEPAYER_KEY }}
          KLAYTN_FEEPAYER_ADDR: ${{ secrets.PROD_KLAYTN_FEEPAYER_ADDR }}
          KLAYTN_OWNER_KEY: ${{ secrets.PROD_KLAYTN_OWNER_KEY }}
          KLAYTN_OWNER_ADDR: ${{ secrets.PROD_KLAYTN_OWNER_KEY_ADDR }}
          KLAYTN_ENDPOINT: https://public-en.node.kaia.io
          CONTRACT_INCHEON_CONTENTS: "0x345F050DdcdBdEA04Cd34E8456f48160d6b1de83"

          ENABLE_S3: false
          ENABLE_LAMBDA: true
        run: |
          npm i -g aws-cdk
          make deploy
